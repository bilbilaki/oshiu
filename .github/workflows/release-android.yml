name: Build and Release Flutter Android App

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version of the release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-release:
    name: Build and Release Android APK
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Java JDK (required for Android builds)
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 35
        build-tools: 35.0.2
        target: android-35

    # Set up Flutter
    - name: Manual Flutter Setup
      run: |
          sudo apt-get update
          sudo apt-get install -y unzip xz-utils
          wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.29.3-stable.tar.xz
          tar xf flutter_linux_3.29.3-stable.tar.xz
          echo "PATH=$PATH:$(pwd)/flutter/bin" >> $GITHUB_ENV
          flutter --version


    # Install dependencies
    - name: Install dependencies
      run: |
        flutter pub get
        flutter pub upgrade

    # Build Android APK with ABI split and multidex support
    - name: Build APK
      run: |
        flutter build apk --release --split-per-abi
        ls -al build/app/outputs/flutter-apk/

    # Archive and prepare APKs for release
    - name: Archive APKs
      run: |
        mkdir -p build/apk
        for apk in build/app/outputs/flutter-apk/app-*-release.apk; do
          cp "$apk" build/apk/$(basename "$apk" .apk)-${{ github.event.inputs.release_version }}.apk
        done

    # Create a GitHub Release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.event.inputs.release_version }}
        release_name: Release ${{ github.event.inputs.release_version }}
        body: |
          This is the Android release for version ${{ github.event.inputs.release_version }} of the app.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Upload APKs to Release
    - name: Upload APKs to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/apk
        asset_name: '*.apk'
        asset_content_type: application/vnd.android.package-archive

    # Debugging Information
    - name: List APK Files
      run: ls -al build/apk
