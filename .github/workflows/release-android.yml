name: Build and Release Flutter Android App

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version of the release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-release:
    name: Build and Release Android APK
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

        #2 Setup Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

    # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 35
          build-tools: 35.0.2
          target: android-35
        #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

        #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get
        
       #6 Building APK
      - name: Build APK
        run: flutter build apk --release
       # Archive and prepare APK for release
      - name: Archive APK
        run: |
          mkdir -p build/apk
          cp build/app/outputs/flutter-apk/app-release.apk build/apk/app-release-android-${{ github.event.inputs.release_version }}.apk

    # Create a GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: Release ${{ github.event.inputs.release_version }}
          body: |
            This is the Android release for version ${{ github.event.inputs.release_version }} of the app.
            draft: false
            prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Upload APK to Release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/apk/app-release-android-${{ github.event.inputs.release_version }}.apk
          asset_name: app-release-android-${{ github.event.inputs.release_version }}.apk
          asset_content_type: application/vnd.android.package-archive
